(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global.myplugin = global.myplugin || {}),global.ng.core));
}(this, (function (exports,import0) { 'use strict';

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var PluginComponent = (function () {
    function PluginComponent() {
    }
    PluginComponent.prototype.ngOnInit = function () {
        console.log('HELLO hey WORLD');
    };
    return PluginComponent;
}());
PluginComponent = __decorate$1([
    import0.Component({
        selector: 'lazy',
        template: 'hi'
    })
], PluginComponent);

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var PluginModule = (function () {
    function PluginModule() {
    }
    return PluginModule;
}());
PluginModule = __decorate([
    import0.NgModule({
        declarations: [
            PluginComponent
        ],
        entryComponents: [
            PluginComponent
        ],
    })
], PluginModule);

/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
var styles_PluginComponent = [];
var RenderType_PluginComponent = import0.ɵcrt({
    encapsulation: 2,
    styles: styles_PluginComponent,
    data: {}
});
function View_PluginComponent_0(l) {
    return import0.ɵvid(0, [(l()(), import0.ɵted(null, ['hi']))], null, null);
}
function View_PluginComponent_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 1, 'lazy', [], null, null, null, View_PluginComponent_0, RenderType_PluginComponent)),
        import0.ɵdid(57344, null, 0, PluginComponent, [], null, null)
    ], function (ck, v) {
        ck(v, 1, 0);
    }, null);
}
var PluginComponentNgFactory = import0.ɵccf('lazy', PluginComponent, View_PluginComponent_Host_0, {}, {}, []);

/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var PluginModuleInjector = (function (_super) {
    __extends(PluginModuleInjector, _super);
    function PluginModuleInjector(parent) {
        return _super.call(this, parent, [PluginComponentNgFactory], []) || this;
    }
    PluginModuleInjector.prototype.createInternal = function () {
        this._PluginModule_0 = new PluginModule();
        return this._PluginModule_0;
    };
    PluginModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === PluginModule)) {
            return this._PluginModule_0;
        }
        return notFoundResult;
    };
    PluginModuleInjector.prototype.destroyInternal = function () {
    };
    return PluginModuleInjector;
}(import0.ɵNgModuleInjector));
var PluginModuleNgFactory = new import0.NgModuleFactory(PluginModuleInjector, PluginModule);

exports.PluginModuleNgFactory = PluginModuleNgFactory;

Object.defineProperty(exports, '__esModule', { value: true });

})));
